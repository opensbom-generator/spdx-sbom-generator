# SPDX-License-Identifier: Apache-2.0

name: Release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      ## checks out our project source code
      - uses: actions/checkout@v3

      ## Builds our docker image!
      - name: Build the Docker image
        run: docker build . --file Dockerfile

      ## Publishes our image to Docker Hub ðŸ˜Ž
      - name: Set RELEASE_VERSION env
        run: echo RELEASE_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: spdx/spdx-sbom-generator
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          tags: "latest,${{ env.RELEASE_VERSION }}"
  release:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish various targets
        goos: [ linux, windows, darwin ]
        goarch: [ "386", amd64, arm64 ]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v2
      # set current version based on release tag
      - name: Set RELEASE_VERSION env
        run: echo RELEASE_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
      - uses: wangyoucao577/go-release-action@v1.18
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "https://dl.google.com/go/go1.18.3.linux-amd64.tar.gz"
          project_path: "./cmd/generator"
          binary_name: "spdx-sbom-generator"
          ldflags: "-X 'main.version=${{ env.RELEASE_VERSION }}'"
      # create and publish sbom
      - name: gh-action-spdx-sbom-generator
        uses: niravpatel27/gh-action-spdx-sbom-generator@v1.0.0
        with:
          version: '0.0.15'
      - name: Check if sbom file generated
        run: |
          if [ ! -f "bom-go-mod.spdx" ]; then
            echo "::error::bom-go-mod.spdx is missing."
            exit 1
          else
             echo "bom-go-mod.spdx created!"
          fi
      - uses: anchore/sbom-action/publish-sbom@v0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          sbom-artifact-match: ".*\\.spdx$"
